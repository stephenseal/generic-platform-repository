package ${packagename};

import java.io.Serializable;
import java.util.Date;
import javax.persistence.*;

import org.springframework.stereotype.Repository;

/**
 * This class has been generated by the generic.processing.framework
 * maven code generator plugin.
 *
 */
@Entity
@Table(name="${classname}")
public class ${classname} implements Serializable {
	private static final long serialVersionUID = 1L;

	// Variables
	<#list variables as variable>
		<#if variable.isForeign() >
	private ${capitaliseFirst(variable.relation.pkTable)} ${variable.relation.pkTable};		
		<#else>
	private ${variable.type} ${variable.name};
		</#if>
	</#list>
	
	// Setters
	<#list variables as variable>
		<#if variable.isForeign() >
	public void set${capitaliseFirst(variable.relation.pkTable)}(${capitaliseFirst(variable.relation.pkTable)} ${variable.relation.pkTable}) {
		this.${variable.relation.pkTable} = ${variable.relation.pkTable};
	}		
		<#else>
	public void set${capitaliseFirst(variable.name)}(${variable.type} ${variable.name}) {
		this.${variable.name} = ${variable.name};
	}		
		</#if>
	</#list>	
	
	// Getters
	<#list variables as variable>
	
		<#if variable.isForeign() >
	@ManyToOne
	@JoinColumn(name="${variable.relation.pkColumn}")
	public ${capitaliseFirst(variable.relation.pkTable)} get${capitaliseFirst(variable.relation.pkTable)}() {
		return this.${variable.relation.pkTable};
	}
		<#else>
			<#if variable.isPrimary()>
	@Id
			</#if>
			<#if variable.isDateType() >
	@Temporal(TemporalType.DATE)
			</#if>
	public ${variable.type} get${capitaliseFirst(variable.name)}() {
		return this.${variable.name};
	}		
		</#if>	
	</#list>	
	
	@Override
	public String toString() {
		return "${classname} [" +
		<#list variables as variable>
			<#if variable.isForeign() >
			" ${variable.relation.pkTable} = " + ${variable.relation.pkTable} +  		
			<#else>
			" ${variable.name} = " + ${variable.name} +
			</#if>
		</#list>		
				" ]";
	}
	
}

<#function capitaliseFirst text>
	<#local len = text?length />
	<#return text[0..0]?upper_case + text[1..len-1]  >
</#function>